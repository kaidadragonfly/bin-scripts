#!/usr/bin/env bash

results=$(git rev-parse --git-dir 2>&1)
fatal=$(echo "${results}" | grep '^fatal:')

if [ "${fatal}" ]; then
    exit 1
fi

cols=$(tput cols)
cols=$((cols - 4))
function show_help() {
    echo 'usage: git summary [OPTION]' | fold -sw ${cols}
    echo
    options=${options}'-s, --show-stashes\n\t\t'
    options=${options}'also display stash information '
    options=${options}'(like "git-stash list")\n'
    options=${options}'show information regarding upstream\n'
    options=${options}'-h, --help\n\t\t'
    options=${options}'display this help and exit\n'
    echo -e "${options}" | sed 's/^/  /'
}

while [ "$1" ]; do
    case "$1" in
        -s* | --show-stashes)
            show_stashes=1
            shift
            ;;
        -h | --help)
            show_help
            exit
            ;;
        *)
            echo "git-summary: unrecoginized option '$1'"
            show_help
            exit
            ;;
    esac
done

has_status=$(git status --porcelain)

if [ ${show_stashes} ]; then
    stashes=$(git stash list)
    if [ "${stashes}" ]; then
        echo "stashes:"
        # Wrap.
        stashes=$(echo "${stashes}" | fold -sw ${cols})
        # Indent.
        stashes=$(echo "${stashes}" | sed 's/^/    /')
        echo "${stashes}"
        # Skip a line.
        if [ "${has_status}" ]; then
            echo
        fi
    fi
fi

branch=$(git branch 2> /dev/null | egrep '^[*] ' \
                | sed -r 's/^[*] //')

if [ "${has_status}" ] || [ "${branch}" != 'master' ] ; then
    git status
fi
